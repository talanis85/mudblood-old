MUDBLOOD(6)                    BSD Games Manual                    MUDBLOOD(6)

NAME
     mudblood -- A text-based MUD client.

SYNOPSIS
     mudblood [-i interface] [-p prefix] host port
     mudblood [-i interface] [-p prefix] name

DESCRIPTION
     mudblood is a text-based client for Multi User Dungeons (MUDs).  If host
     and port are given, it connects to the MUD on the specified server.  If
     name is given, the server is read from the specified MUD definition (see
     below).

   Command line options:
     -i interface
           mudblood currently provides two interfaces: serial (default) and
           curses.

     -p prefix
           Set the prefix character for commands. Default is "."

FILES
     To save keystrokes and - more importantly - make features like the
     automapper work, mudblood uses MUD definition scripts to configure itself
     for a certain MUD.  A MUD definition script is a python module that "sub-
     classes" the base module (mud_base.py) and changes whatever is needed
     (actually, python modules cannot be subclassed; however, we simply import
     all available symbols from the base module which is conceptually simi-
     lar).

     Currently, mudblood uses the following fields from the definition script:

     host
        The hostname / IP of the MUD server

     port
        The port to connect to

     strings
        An associative array (map) with the following fields:

        command_not_found
           What the MUD typically answers when you type a non-existent command

        prompt
           The prompt that is displayed in the MUD (default: "> ")

     Direction
        A class that is used by the automapper. It defines the possible direc-
        tions we can move.

   Example 1:
     The most simple application of a MUD definition consists only of a host
     and port definition:

           # This first line is generally mandatory!
           from mud_base import *

           host = "localhost"
           port = 9999

     This script defines a MUD that listens on localhost:9999.

   Example 2:
     The automapper works out-of-the-box only for certain german MUDs that use
     the MGLib MudLib.  The reason for this is that it needs to know the vari-
     ous directions you can move in the MUD, together with their opposite
     directions etc. If the MUD you want to play is not of that built-in type,
     you have to provide some information yourself, using the "Direction"
     class of the mud_base module.

     The following example should provide a working basis for most english-
     speaking MUDs:

           from mud_base import *
           # the following line is needed to subclass the Direction class
           import mud_base

           class Direction(mud_base.Direction):
               # standard directions
               NORTH = "n"
               NORTHWEST = "nw"
               WEST = "w"
               SOUTHWEST = "sw"
               SOUTH = "s"
               SOUTHEAST = "se"
               EAST = "e"
               NORTHEAST = "ne"

               # all directions with their opposites
               directions = [
                       # aliases for the       opposite
                       # same direction
                       (['n', 'north'],        's'),
                       (['nw', 'northwest'],   'se'),
                       (['w', 'west'],         'e'),
                       (['sw', 'southwest'],   'ne'),
                       (['s', 'south'],        'n'),
                       (['se', 'southeast'],   'nw'),
                       (['e', 'east'],         'w'),
                       (['ne', 'northeast'],   'sw'),
                       (['u', 'up'],           'd'),
                       (['d', 'down'],         'u'),
                   ]

           # Change the following to fit your MUD
           strings['command_not_found'] = "Command not found"
           strings['prompt'] = "> "

           host = "localhost"
           port = 9999

     Since the definition script is really just a python module, the automap-
     per can be customized even further. To dive in, see the implementation in
     src/mud_base.py.

                                  Sep 4, 2011
